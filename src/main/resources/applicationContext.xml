<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
        <!--Spring configuration file, the main confiugration here is related to business logic -->
        <!--=================== Data source, transaction control, xxx ================-->
    <context:component-scan base-package="com.padre">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--================== Integration of configuration and MyBatis=============== -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- Specify the location of the mybatis global configuration file -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" value="pooledDataSource"></property>
        <!-- Specify the location of mybatis, mapper file -->
        <property name="mapperLocations" value="classpath:/*.xml"></property>
    </bean>

    <!-- Configure the scanner and add the implementation of the mybatis interface to the ioc container -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--Scan the implementation of all dao interfaces and add them to the ioc container -->
        <property name="basePackage" value="com.padre.crud.dao"/>
    </bean>

    <!-- Configure a sqlSession that can execute batches -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>

    <!--Enable annotation-based transactions and use xml configuration transactions (it is necessary to use configuration types) -->
    <aop:config>
        <!-- Pointcut expression -->
        <aop:pointcut id="txPoint" expression="execution(* com.padre.crud.service..*(..))"/>
        <!-- Configuration transaction enhancement -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"></aop:advisor>
    </aop:config>

    <!--Configuration transaction enhancement, how to cut in the transaction -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- All methods are transaction methods -->
            <tx:method name="*"/>
            <!--All methods starting with get -->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!-- The core point of the Spring configuration file (data source, integration with mybatis, transaction control) -->


</beans>